@page
@using Microsoft.AspNetCore.Identity
@using MusicReviewsWebsite.Models
@model MusicReviewsWebsite.Pages.Genres.SuggestModel
@inject UserManager<ApplicationUser> UserManager
@{
}

<a asp-page="/Albums/Profile" asp-route-id="@Model.Album.Id">@Html.DisplayFor(model => model.Album.Name)</a>

@foreach (var genre in Model.GenresSuggested)
{
    <div><h2>@genre.Genre</h2></div>

    <p>@genre.Description</p>
    <div>
        <b>voted for:</b> @genre.UsersFor.Count() :
        @foreach (string userFor in genre.UsersFor)
        {
            <a asp-page="/Users/Profile" asp-route-name="@userFor"><span>@userFor</span></a>
            @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Moderator")))
            {
                <form asp-page-handler="undo" method="post" style="display: inline;">
                    <input type="hidden" name="album_id" value="@Model.Album.Id" />
                    <button class="btn btn-outline-danger">Del</button>
                    <input type="hidden" name="userName" value="@userFor">
                    <input type="hidden" name="genre_id" value="@genre.GenreId" />
                </form>
            }
        }
    </div>
    <div>
        <b>voted against:</b> @genre.UsersAgainst.Count() :
        @foreach (string userAgainst in genre.UsersAgainst)
        {
            <a asp-page="/Users/Profile" asp-route-name="@userAgainst"><span>@userAgainst</span></a>
            @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Moderator")))
            {
                <form asp-page-handler="undo" method="post" style="display: inline;">
                    <input type="hidden" name="album_id" value="@Model.Album.Id" />
                    <button class="btn btn-outline-danger">Del</button>
                    <input type="hidden" name="userName" value="@userAgainst">
                    <input type="hidden" name="genre_id" value="@genre.GenreId" />
                </form>
            }
        }
    </div>
    <div>
        <div>
            <form asp-page-handler="vote" method="post" style="display: inline;">
                <button class="btn btn-success">+</button>
                <input type="hidden" name="album_id" value="@Model.Album.Id" />
                <input type="hidden" name="isFor" value="True" />
                <input type="hidden" name="genre_id" value="@genre.GenreId" />
            </form>
            <form asp-page-handler="vote" method="post" style="display: inline;">
                <button class="btn btn-danger">-</button>
                <input type="hidden" name="album_id" value="@Model.Album.Id" />
                <input type="hidden" name="isFor" value="False" />
                <input type="hidden" name="genre_id" value="@genre.GenreId" />
            </form>
            @if (genre.UsersFor.Contains((await @UserManager.GetUserAsync(User)).Name) || genre.UsersAgainst.Contains((await @UserManager.GetUserAsync(User)).Name))
            {
                <form asp-page-handler="undo" method="post" style="display: inline;">
                    <input type="hidden" name="album_id" value="@Model.Album.Id" />
                    <button class="btn btn-primary">Remove Vote</button>
                    <input type="hidden" name="genre_id" value="@genre.GenreId" />
                </form>
            }
        </div>
    </div>
    <hr>
}
@if (ViewBag.GenreId.Count > 0)
{
    <div class="col-6">
        <form asp-page-handler="vote" method="post">
            <input type="hidden" name="album_id" value="@Model.Album.Id" />
            <input type="hidden" name="isFor" value="True" />
            <select name="genre_id" class="form-control" asp-items="ViewBag.GenreId"></select>
            <button class="btn btn-primary">Suggest New Genre</button>
        </form>
    </div>
}